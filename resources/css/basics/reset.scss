*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  font-family: var(--fontBase);
  color: rgb(var(--colorText) / 1);
  background-color: rgb(var(--colorBg) / 1);
  accent-color: rgb(var(--colorAccent1));

  // disable elastic scrolling
  height: 100%;
  overflow: hidden;
}
body {
  margin: 0;
  font-size: 16px;
  line-height: 1.5;
  text-wrap: pretty; // smart text wrap
  word-break: break-word;

  // disable elastic scrolling
  height: 100%;
  overflow-y: auto;
  overflow-x: hidden;
}


h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  margin-bottom: 0.75em;
  line-height: 1.25;
  font-weight: 500;

  tt, code {
    padding: 0 0.2em;
    font-size: inherit;
  }
}
h1 {
  margin-bottom: 1em;
  font-size: var(--fs-1);
  font-weight: 400;
}
h2 {
  font-size: var(--fs-2);
  font-weight: 400;
}
h3 {
  font-size: var(--fs-3);
}
h4 {
  font-size: var(--fs-4);
}
h5 {
  font-size: var(--fs-5);
}
h6 {
  font-size: var(--fs-6);
}

p {
  margin-top: 0;
  margin-bottom: 0.625em;
}

hr {
  box-sizing: content-box;
  overflow: hidden;
  height: 0.25em;
  padding: 0;
  margin: 2.5rem 0;
  background-color: var(--colorBorder);
  border: 0;

  &::before {
    display: table;
    content: "";
  }
  &::after {
    display: table;
    clear: both;
    content: "";
  }
}

ul, ol {
  padding-left: 1.5rem;
  margin-top: 0;
  margin-bottom: 0;
  ul, ol {
    margin-top: 0.5rem;
  }
}
ol ol,
ul ol {
  list-style-type: lower-roman;
}
ul ul ol,
ul ol ol,
ol ul ol,
ol ol ol {
  list-style-type: lower-alpha;
}

dd {
  margin-left: 0;
}

tt, code, samp, pre, kbd {
  font-family: var(--fontCode);
  font-size: 1em;
  transition: all ease 200ms;

  &:hover {
    border-color: rgb(var(--colorInvert) / 0.2);
  }
}

kbd {
  display: inline-block;
  padding: 0.2em 0.25em;
  vertical-align: middle;
  font-size: 85%;
  line-height: normal;
  background-color: rgb(var(--colorInvert) / 0.1);
  border: 0.075rem solid var(--colorBorder);
  border-radius: calc(var(--border-radius) * 1.25);
  box-shadow: inset 0 -0.075rem 0 var(--colorBorder);

  &:hover {
    background-color: rgb(var(--colorInvert) / 0.15);
    box-shadow: inset 0 -0.075rem 0 rgb(var(--colorInvert) / 0.2);
  }
}

code,
tt {
  padding: 0.2em 0.4em;
  margin: 0;
  font-size: 85%;
  color: salmon;
  white-space: break-spaces;
  background-color: rgb(var(--colorInvert) / 0.075);
  border: 0.075rem solid transparent;
  border-radius: calc(var(--border-radius) * 1.25);

  @media (prefers-color-scheme: light) {
    color: crimson;
  }
}
code br,
tt br {
  display: none;
}
del code {
  text-decoration: inherit;
}
samp {
  font-size: 85%;
}

pre {
  word-wrap: normal;
  padding: 0 0.5rem 0.5rem;
  max-width: calc(100vw - 2rem);
  max-height: 20rem;
  overflow: auto;
  font-size: 85%;
  line-height: 1.45;
  background-color: rgb(var(--colorInvert) / 0.075);
  border: 0.075rem solid var(--colorBorder);
  border-radius: calc(var(--border-radius) * 1.5);
  transition: all ease 200ms;

  &::before {
    content: "<code>";
    display: inline-block;
    padding: 0.125rem 0.5rem;
    color: rgb(var(--colorText) / 0.65);
    background-color: rgb(var(--colorInvert) / 0.05);

    position: sticky;
    left: -0.5rem;
    margin-left: -0.5rem;
    margin-bottom: 0.5rem;
    border-bottom-right-radius: calc(var(--border-radius) * 1.5);
  }

  code {
    font-size: 100%;
  }
  code,
  tt {
    display: inline;
    max-width: auto;
    padding: 0;
    margin: 0;
    overflow: visible;
    line-height: inherit;
    word-wrap: normal;
    background-color: transparent;
    border: 0;
  }

  &> code {
    display: block;
    padding: 0;
    margin: 0;
    word-break: normal;
    white-space: pre;
    background: transparent;
    border: 0;
  }

  &:hover {
    border-color: rgb(var(--colorInvert) / 0.3);
  }
}

sup,
sub {
  font-size: 60%;
}

b,
strong {
  font-weight: 600;
}


a,
a:visited {
  display: inline;
  text-decoration-style: dashed;
  text-decoration-thickness: 0.03125em;
  text-underline-position: under;
  transition: all ease 200ms;
  color: rgb(var(--colorAccent1) / 1);
}
a {
  img {
    -webkit-user-drag: none;
    user-drag: none;
  }

  &:hover {
    text-decoration-style: wavy;
    text-decoration-thickness: 0.25em;
    text-decoration-color: rgb(var(--colorAccent1));
    color: rgb(var(--colorText));
    filter: brightness(1.2);
  }
  &:active {
    filter: brightness(0.75);
    transition: all ease 80ms;
  }
  &:disabled,
  &.disabled {
    pointer-events: none;
    color: inherit;
    opacity: 0.5;
  }
}

p, blockquote, ul, ol, dl, table, pre, details {
  margin-top: 0;
  margin-bottom: 1em;
}

blockquote {
  margin: 0;
  padding: 0 1em;
  color: rgb(var(--colorText) / 0.75);
  border-left: 0.25em solid var(--colorBorder);
}
blockquote>:first-child {
  margin-top: 0;
}
blockquote>:last-child {
  margin-bottom: 0;
}


details,
figcaption,
figure {
  display: block;
}
figure {
  margin: 1em 2.5rem;
}
summary {
  h1,  h2,  h3,  h4,  h5, h6 {
    display: inline-block;
  }
  h1, h2 {
    padding-bottom: 0;
    border-bottom: 0;
  }
}
details {
  summary {
    display: list-item;
    cursor: pointer;
  }

  &:not([open])>*:not(summary) {
    display: none !important;
  }
}

abbr[title] {
  border-bottom: none;
  text-decoration: underline dotted;
}

dfn {
  font-style: italic;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}


dl {
  padding: 0;

  dt {
    padding: 0;
    margin-top: 1rem;
    font-size: 1em;
    font-style: italic;
    font-weight: 500;
  }
  dd {
    padding: 0 1rem;
    margin-bottom: 1rem;
  }
}


img,
svg {
  vertical-align: middle;
  border-style: none;
  max-width: 100%;
  box-sizing: content-box;
}
img {
  border-radius: calc(var(--border-radius) * 1.5);

  &[align=right] {
    padding-left: 1.25rem;
  }
  
  &[align=left] {
    padding-right: 1.25rem;
  }
}


article {
  word-break: break-word;
  word-wrap: break-word;

  img {
    box-shadow: var(--shadow-base), var(--shadow);
  }

  h1, h2, h3, h4, h5, h6 {
    margin-top: 1.75em;
  }

  &> *:first-child {
    margin-top: 0;
  }

  &> *:last-child {
    margin-bottom: 0;
  }
}


table {
  caption-side: bottom;
  border-collapse: collapse;
  border-spacing: 0;
  border: 0.075rem solid var(--colorBorder);
  border-radius: calc(var(--border-radius) * 1.5);
  display: block;
  width: max-content;
  max-width: 100%;
  overflow: auto;
  font-size: 90%;

  @media (max-width: 768px) {
    width: calc(100vw - 2rem);
    white-space: nowrap;
  }

  thead,
  tbody,
  tfoot,
  tr,
  td,
  th {
    border-color: inherit;
    border-style: solid;
    border-width: 0;
  }

  td, th {
    padding: 0.35rem 0.75rem;
    border: 0.075rem solid var(--colorBorder);

    code {
      white-space: nowrap;
    }
  }

  tr {
    border-top: 0.075rem solid var(--colorBorder);
    transition: all ease 100ms;

    &:nth-child(2n) {
      background-color: rgb(var(--colorInvert) / 0.05);
    }

    &:hover {
      background-color: rgb(var(--colorAccent2) / 0.1);
    }
  }

  thead > tr {
    background-color: rgb(var(--colorAccent1) / 0.1) !important;
  }

  // 1. Removes font-weight bold by inheriting
  // 2. Matches default `<td>` alignment by inheriting `text-align`.
  // 3. Fix alignment for Safari
  th {
    font-weight: 500; // 1
    text-align: inherit; // 2
    text-align: match-parent; // 3
    text-align: -webkit-match-parent; // 3
    word-break: keep-all;
  }

  tr:first-of-type {
    border-top: 0;

    th, td {
      border-top: 0;
    }
  }
  tr:last-of-type {
    td {
      border-bottom: 0;
    }
  }
  th, td {
    &:first-of-type {
      border-left: 0;
    }
    &:last-of-type {
      border-right: 0;
    }
  }
}




label {
  display: inline-block;
}


input,
button,
select,
optgroup,
textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}


input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  margin: 0;
  -webkit-appearance: none;
  appearance: none;
}
[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  padding: 0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}
[type=search]::-webkit-search-cancel-button,
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-input-placeholder {
  color: inherit;
  opacity: .54;
}
::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}
::placeholder {
  color: var(--color-fg-subtle);
  opacity: 1;
}
::-webkit-calendar-picker-indicator {
  filter: invert(50%);
}


// Remove the inheritance of text transform in Firefox
button,
select {
  text-transform: none;
}
// Set the cursor for non-`<button>` buttons
//
// Details at https://github.com/twbs/bootstrap/pull/30562
[role="button"] {
  cursor: pointer;
}


select {
  // Remove the inheritance of word-wrap in Safari.
  // See https://github.com/twbs/bootstrap/issues/24990
  word-wrap: normal;

  // Undo the opacity change from Chrome
  &:disabled {
    opacity: 1;
  }
}


// 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
//    controls in Android 4.
// 2. Correct the inability to style clickable types in iOS and Safari.
button,
[type="button"], // 1
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; // 2
  appearance: button;
}


// 1. Textareas should really only resize vertically so they don't break their (horizontal) containers.
textarea {
  resize: vertical; // 1
}


// 1. Browsers set a default `min-width: min-content;` on fieldsets,
//    unlike e.g. `<div>`s, which have `min-width: 0;` by default.
//    So we reset that to ensure fieldsets behave more like a standard block element.
//    See https://github.com/twbs/bootstrap/issues/12359
//    and https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements
// 2. Reset the default outline behavior of fieldsets so they don't affect page layout.
fieldset {
  min-width: 0; // 1
  padding: 0; // 2
  margin: 0; // 2
  border: 0; // 2
}


// Fix height of inputs with a type of datetime-local, date, month, week, or time
// See https://github.com/twbs/bootstrap/issues/18842
::-webkit-datetime-edit-fields-wrapper,
::-webkit-datetime-edit-text,
::-webkit-datetime-edit-minute,
::-webkit-datetime-edit-hour-field,
::-webkit-datetime-edit-day-field,
::-webkit-datetime-edit-month-field,
::-webkit-datetime-edit-year-field {
  padding: 0;
}
::-webkit-inner-spin-button {
  height: auto;
}


// 1. Correct the outline style in Safari.
// 2. This overrides the extra rounded corners on search inputs in iOS so that our
//    `.form-control` class can properly style them. Note that this cannot simply
//    be added to `.form-control` as it's not specific enough. For details, see
//    https://github.com/twbs/bootstrap/issues/11586.
[type="search"] {
  outline-offset: -2px; // 1
  -webkit-appearance: textfield; // 2
  appearance: textfield;
}


// Remove the inner padding in Chrome and Safari on macOS.
::-webkit-search-decoration {
  -webkit-appearance: none;
  appearance: none;
}


// Remove padding around color pickers in webkit browsers
::-webkit-color-swatch-wrapper {
  padding: 0;
}


// Inherit font family and line height for file input buttons
::file-selector-button {
  font: inherit;
}


// 1. Change font properties to `inherit`
// 2. Correct the inability to style clickable types in iOS and Safari.
::-webkit-file-upload-button {
  font: inherit; // 1
  -webkit-appearance: button; // 2
  appearance: button;
}


::selection {
  background-color: rgb(var(--colorAccent2) / 0.5);
}


// Correct element displays
output {
  display: inline-block;
}


// Remove border from iframe
iframe {
  border: 0;
  border-radius: calc(var(--border-radius) * 1.5);
}


// Progress
//
// Add the correct vertical alignment in Chrome, Firefox, and Opera.
progress {
  vertical-align: baseline;
}


// Hidden attribute
//
// Always hide an element with the `hidden` HTML attribute.
[hidden] {
  display: none !important;
}


.__web-inspector-hide-shortcut__,
.__web-inspector-hide-shortcut__ *,
.__web-inspector-hidebefore-shortcut__::before,
.__web-inspector-hideafter-shortcut__::after {
  display: none !important;
}


.embed {
  display: block;
  overflow: hidden;
  padding: 0;
  position: relative;
  width: 100%;
  padding-top: 56.25%; // 16:9

  &::before {
    content: "";
    display: block;
  }

  .embed-item,
  embed,
  iframe,
  object,
  video {
    border: 0;
    bottom: 0;
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%
  }
  
  &.embed-4by3::before {
    padding-top: 75%;
  }
  
  &.embed-1by1::before {
    padding-top: 100%;
  }
}